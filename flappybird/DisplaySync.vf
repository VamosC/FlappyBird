////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : DisplaySync.vf
// /___/   /\     Timestamp : 01/14/2019 15:33:26
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/lch/flappybird2/flappybird/flappybird/ipcore_dir -intstyle ise -family kintex7 -verilog E:/lch/flappybird2/flappybird/flappybird/DisplaySync.vf -w E:/lch/flappybird2/flappybird/flappybird/DisplaySync.sch
//Design Name: DisplaySync
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module INV4_HXILINX_DisplaySync (O0, O1, O2, O3, I0, I1, I2, I3);
    

   output O0;
   output O1;
   output O2;
   output O3;

   input  I0;
   input  I1;
   input  I2;
   input  I3;

assign O0 = !I0;
assign O1 = !I1;
assign O2 = !I2;
assign O3 = !I3;

endmodule
`timescale 1ns / 1ps

module MUX4to1_MUSER_DisplaySync(I0, 
                                 I1, 
                                 I2, 
                                 I3, 
                                 S, 
                                 o);

    input I0;
    input I1;
    input I2;
    input I3;
    input [1:0] S;
   output o;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   
   INV  XLXI_1 (.I(S[1]), 
               .O(XLXN_7));
   INV  XLXI_2 (.I(S[0]), 
               .O(XLXN_8));
   AND2  XLXI_3 (.I0(XLXN_8), 
                .I1(XLXN_7), 
                .O(XLXN_13));
   AND2  XLXI_4 (.I0(S[0]), 
                .I1(XLXN_7), 
                .O(XLXN_14));
   AND2  XLXI_5 (.I0(S[1]), 
                .I1(XLXN_8), 
                .O(XLXN_15));
   AND2  XLXI_6 (.I0(S[1]), 
                .I1(S[0]), 
                .O(XLXN_16));
   AND2  XLXI_7 (.I0(I0), 
                .I1(XLXN_13), 
                .O(XLXN_27));
   AND2  XLXI_8 (.I0(I1), 
                .I1(XLXN_14), 
                .O(XLXN_28));
   AND2  XLXI_9 (.I0(I2), 
                .I1(XLXN_15), 
                .O(XLXN_29));
   AND2  XLXI_10 (.I0(I3), 
                 .I1(XLXN_16), 
                 .O(XLXN_30));
   OR4  XLXI_11 (.I0(XLXN_30), 
                .I1(XLXN_29), 
                .I2(XLXN_28), 
                .I3(XLXN_27), 
                .O(o));
endmodule
`timescale 1ns / 1ps

module Mux4to14b_MUSER_DisplaySync(I0, 
                                   I1, 
                                   I2, 
                                   I3, 
                                   S, 
                                   o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] S;
   output [3:0] o;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_25;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_47;
   wire XLXN_56;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   
   AND2  XLXI_1 (.I0(XLXN_4), 
                .I1(XLXN_3), 
                .O(XLXN_44));
   AND2  XLXI_2 (.I0(S[0]), 
                .I1(XLXN_3), 
                .O(XLXN_45));
   AND2  XLXI_3 (.I0(S[1]), 
                .I1(XLXN_4), 
                .O(XLXN_25));
   AND2  XLXI_4 (.I0(S[1]), 
                .I1(S[0]), 
                .O(XLXN_47));
   INV  XLXI_5 (.I(S[1]), 
               .O(XLXN_3));
   INV  XLXI_6 (.I(S[0]), 
               .O(XLXN_4));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(XLXN_44), 
                .O(XLXN_56));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_45), 
                .O(XLXN_57));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(XLXN_25), 
                .O(XLXN_58));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_47), 
                 .O(XLXN_59));
   OR4  XLXI_11 (.I0(XLXN_59), 
                .I1(XLXN_58), 
                .I2(XLXN_57), 
                .I3(XLXN_56), 
                .O(o[0]));
   AND2  XLXI_16 (.I0(I0[1]), 
                 .I1(XLXN_44), 
                 .O(XLXN_60));
   AND2  XLXI_17 (.I0(I1[1]), 
                 .I1(XLXN_45), 
                 .O(XLXN_61));
   AND2  XLXI_18 (.I0(I2[1]), 
                 .I1(XLXN_25), 
                 .O(XLXN_62));
   AND2  XLXI_19 (.I0(I3[1]), 
                 .I1(XLXN_47), 
                 .O(XLXN_63));
   AND2  XLXI_20 (.I0(I0[2]), 
                 .I1(XLXN_44), 
                 .O(XLXN_64));
   AND2  XLXI_21 (.I0(I1[2]), 
                 .I1(XLXN_45), 
                 .O(XLXN_65));
   AND2  XLXI_22 (.I0(I2[2]), 
                 .I1(XLXN_25), 
                 .O(XLXN_66));
   AND2  XLXI_23 (.I0(I3[2]), 
                 .I1(XLXN_47), 
                 .O(XLXN_67));
   AND2  XLXI_24 (.I0(I0[3]), 
                 .I1(XLXN_44), 
                 .O(XLXN_68));
   AND2  XLXI_25 (.I0(I1[3]), 
                 .I1(XLXN_45), 
                 .O(XLXN_69));
   AND2  XLXI_26 (.I0(I2[3]), 
                 .I1(XLXN_25), 
                 .O(XLXN_70));
   AND2  XLXI_27 (.I0(I3[3]), 
                 .I1(XLXN_47), 
                 .O(XLXN_71));
   OR4  XLXI_40 (.I0(XLXN_63), 
                .I1(XLXN_62), 
                .I2(XLXN_61), 
                .I3(XLXN_60), 
                .O(o[1]));
   OR4  XLXI_41 (.I0(XLXN_67), 
                .I1(XLXN_66), 
                .I2(XLXN_65), 
                .I3(XLXN_64), 
                .O(o[2]));
   OR4  XLXI_42 (.I0(XLXN_71), 
                .I1(XLXN_70), 
                .I2(XLXN_69), 
                .I3(XLXN_68), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module DisplaySync(Hexs, 
                   LES, 
                   point, 
                   Scan, 
                   AN, 
                   HEX, 
                   LE, 
                   p);

    input [15:0] Hexs;
    input [3:0] LES;
    input [3:0] point;
    input [1:0] Scan;
   output [3:0] AN;
   output [3:0] HEX;
   output LE;
   output p;
   
   wire XLXN_30;
   wire XLXN_32;
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   
   Mux4to14b_MUSER_DisplaySync  XLXI_1 (.I0(Hexs[3:0]), 
                                       .I1(Hexs[7:4]), 
                                       .I2(Hexs[11:8]), 
                                       .I3(Hexs[15:12]), 
                                       .S(Scan[1:0]), 
                                       .o(HEX[3:0]));
   MUX4to1_MUSER_DisplaySync  XLXI_2 (.I0(point[3]), 
                                     .I1(point[2]), 
                                     .I2(point[1]), 
                                     .I3(point[0]), 
                                     .S(Scan[1:0]), 
                                     .o(p));
   MUX4to1_MUSER_DisplaySync  XLXI_3 (.I0(LES[3]), 
                                     .I1(LES[2]), 
                                     .I2(LES[1]), 
                                     .I3(LES[0]), 
                                     .S(Scan[1:0]), 
                                     .o(LE));
   AND2  XLXI_4 (.I0(XLXN_30), 
                .I1(XLXN_32), 
                .O(XLXN_36));
   AND2  XLXI_5 (.I0(Scan[0]), 
                .I1(XLXN_32), 
                .O(XLXN_37));
   AND2  XLXI_6 (.I0(Scan[1]), 
                .I1(XLXN_30), 
                .O(XLXN_38));
   AND2  XLXI_7 (.I0(Scan[1]), 
                .I1(Scan[0]), 
                .O(XLXN_39));
   INV  XLXI_8 (.I(Scan[1]), 
               .O(XLXN_32));
   INV  XLXI_9 (.I(Scan[0]), 
               .O(XLXN_30));
   (* HU_SET = "XLXI_10_1" *) 
   INV4_HXILINX_DisplaySync  XLXI_10 (.I0(XLXN_39), 
                                     .I1(XLXN_38), 
                                     .I2(XLXN_37), 
                                     .I3(XLXN_36), 
                                     .O0(AN[3]), 
                                     .O1(AN[2]), 
                                     .O2(AN[1]), 
                                     .O3(AN[0]));
endmodule
